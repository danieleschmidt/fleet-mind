# Production Dockerfile for Fleet-Mind
FROM python:3.11-slim as base

# Set environment variables
ENV PYTHONDONTWRITEBYTECODE=1 \
    PYTHONUNBUFFERED=1 \
    PYTHONPATH=/app \
    PIP_NO_CACHE_DIR=1 \
    PIP_DISABLE_PIP_VERSION_CHECK=1

# Install system dependencies
RUN apt-get update && apt-get install -y \
    build-essential \
    curl \
    git \
    libffi-dev \
    libssl-dev \
    && rm -rf /var/lib/apt/lists/*

# Create app user for security
RUN groupadd -r fleet && useradd -r -g fleet fleet

# Set working directory
WORKDIR /app

# Copy requirements first for better caching
COPY requirements.txt requirements-prod.txt ./

# Install Python dependencies
RUN pip install --upgrade pip && \
    pip install -r requirements-prod.txt

# Production stage
FROM base as production

# Copy application code
COPY --chown=fleet:fleet . .

# Create necessary directories
RUN mkdir -p /app/logs /app/data /app/config && \
    chown -R fleet:fleet /app

# Install additional production dependencies
RUN pip install \
    gunicorn[gevent]==21.2.0 \
    prometheus-client==0.19.0 \
    opentelemetry-api==1.21.0 \
    opentelemetry-sdk==1.21.0 \
    opentelemetry-exporter-jaeger==1.21.0 \
    redis==5.0.1 \
    pymongo==4.6.0 \
    psutil==5.9.6

# Switch to non-root user
USER fleet

# Expose ports
EXPOSE 8000 8080

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=60s --retries=3 \
    CMD curl -f http://localhost:8000/health || exit 1

# Default command
CMD ["gunicorn", "--bind", "0.0.0.0:8000", "--workers", "4", "--worker-class", "gevent", "--worker-connections", "1000", "--max-requests", "10000", "--max-requests-jitter", "1000", "--preload", "--access-logfile", "/app/logs/access.log", "--error-logfile", "/app/logs/error.log", "--log-level", "info", "fleet_mind.api.main:app"]