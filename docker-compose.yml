# Fleet-Mind Development and Testing Environment
version: '3.8'

services:
  # Fleet-Mind Coordinator
  fleet-coordinator:
    build: .
    container_name: fleet-mind-coordinator
    ports:
      - "8080:8080"  # WebRTC signaling
      - "8081:8081"  # HTTP API
      - "8082:8082"  # Monitoring
    environment:
      - FLEET_MIND_ENV=development
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - REDIS_URL=redis://redis:6379/0
      - LOG_LEVEL=INFO
    volumes:
      - ./data:/app/data
      - ./logs:/app/logs
      - ./config:/app/config
    depends_on:
      - redis
      - prometheus
    networks:
      - fleet-mind-network
    restart: unless-stopped
    command: ["python", "-m", "fleet_mind.ros2_integration.fleet_manager_node"]

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: fleet-mind-redis
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    networks:
      - fleet-mind-network
    restart: unless-stopped
    command: redis-server --appendonly yes

  # Prometheus Monitoring
  prometheus:
    image: prom/prometheus:latest
    container_name: fleet-mind-prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus-data:/prometheus
    networks:
      - fleet-mind-network
    restart: unless-stopped
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'
      - '--web.enable-lifecycle'

  # Grafana Dashboard
  grafana:
    image: grafana/grafana:latest
    container_name: fleet-mind-grafana
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
    volumes:
      - grafana-data:/var/lib/grafana
      - ./monitoring/grafana/dashboards:/etc/grafana/provisioning/dashboards
      - ./monitoring/grafana/datasources:/etc/grafana/provisioning/datasources
    networks:
      - fleet-mind-network
    depends_on:
      - prometheus
    restart: unless-stopped

  # Gazebo Simulation (optional)
  gazebo:
    image: osrf/ros:humble-desktop-full
    container_name: fleet-mind-gazebo
    ports:
      - "11345:11345"  # Gazebo
    environment:
      - DISPLAY=${DISPLAY}
      - QT_X11_NO_MITSHM=1
    volumes:
      - /tmp/.X11-unix:/tmp/.X11-unix:rw
      - ./simulation:/root/simulation
    networks:
      - fleet-mind-network
    restart: "no"
    profiles:
      - simulation
    command: gazebo --verbose

  # WebRTC TURN Server
  coturn:
    image: coturn/coturn:latest
    container_name: fleet-mind-coturn
    ports:
      - "3478:3478/udp"
      - "3478:3478/tcp"
      - "49160-49170:49160-49170/udp"
    environment:
      - TURN_USERNAME=fleetmind
      - TURN_PASSWORD=secure_turn_password
    networks:
      - fleet-mind-network
    restart: unless-stopped
    command: |
      -n
      --log-file=stdout
      --lt-cred-mech
      --fingerprint
      --no-multicast-peers
      --no-cli
      --no-tlsv1
      --no-tlsv1_1
      --realm=fleet-mind.local
      --user=fleetmind:secure_turn_password

volumes:
  redis-data:
  prometheus-data:
  grafana-data:

networks:
  fleet-mind-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16