apiVersion: apps/v1
kind: Deployment
metadata:
  name: fleet-mind-coordinator
  namespace: fleet-mind-global
  labels:
    app.kubernetes.io/name: fleet-mind
    app.kubernetes.io/component: coordinator
    app.kubernetes.io/version: latest
spec:
  replicas: 3
  selector:
    matchLabels:
      app.kubernetes.io/name: fleet-mind
      app.kubernetes.io/component: coordinator
  template:
    metadata:
      labels:
        app.kubernetes.io/name: fleet-mind
        app.kubernetes.io/component: coordinator
        app.kubernetes.io/version: latest
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "8080"
        prometheus.io/path: "/metrics"
    spec:
      containers:
      - name: coordinator
        image: fleet-mind-registry/fleet-mind-coordinator:latest
        ports:
        - containerPort: 8080
          name: http
        - containerPort: 9080
          name: metrics
        env:
        - name: PORT
          value: "8080"
        - name: METRICS_PORT
          value: "9080"
        - name: NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: DEPLOYMENT_ID
          value: fleet-mind-global_edge-1755714064
        resources:
          requests:
            memory: 2Gi
            cpu: 1000m
          limits:
            memory: 4Gi
            cpu: 2000m
        livenessProbe:
          httpGet:
            path: /health
            port: http
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /ready
            port: http
          initialDelaySeconds: 5
          periodSeconds: 5
        securityContext:
          runAsNonRoot: true
          runAsUser: 1000
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
      securityContext:
        fsGroup: 1000
